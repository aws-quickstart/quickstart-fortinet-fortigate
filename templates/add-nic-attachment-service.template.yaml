---
AWSTemplateFormatVersion: 2010-09-09
Description:  A service to handle additional network interface attachment / detachment to a EC2 instance in a given VPC. (qs-1s1i8bh4h)
Parameters:
  QSS3BucketName:
    AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$
    ConstraintDescription: Quick Start bucket name can include numbers, lowercase
      letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen
      (-).
    Default: aws-quickstart
    Description: S3 bucket name for the Quick Start assets. This string can include
      numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start
      or end with a hyphen (-).
    Type: String
  QSS3KeyPrefix:
    AllowedPattern: ^[0-9a-zA-Z-/.]*$
    ConstraintDescription: Quick Start key prefix can include numbers, lowercase letters,
      uppercase letters, hyphens (-), periods (.) and forward slash (/).
    Default: quickstart-fortinet-fortigate/
    Description: S3 key prefix for the Quick Start assets. Quick Start key prefix
      can include numbers, lowercase letters, uppercase letters, hyphens (-), periods (.) and
      forward slash (/).
    Type: String
  QSS3BucketRegion:
    Default: 'us-east-1'
    Description: Region where the Quick Start S3 bucket (QSS3BucketName) is
      hosted. When using your own bucket, you must specify this value.
    Type: String
  ResourceTagPrefix:
    Type: String
    AllowedPattern: '[0-9a-zA-Z@.#-]+'
    MaxLength: 64
    ConstraintDescription: >-
      Resource tag prefix can include numbers, lowercase letters, uppercase
      letters, ampersat(@) , hyphens (-), period (.), and hash (#). Max length
      is 64.
    Description: >-
      A prefix for tag key ResourceGroup on all resources. It's also used as the
      name prefix of all applicable resources. Can only contain numbers,
      lowercase letters, uppercase letters, ampersat(@) , hyphens (-), period
      (.), and hash (#). Max length is 64.
  CustomIdentifier:
    Type: String
    MaxLength: '10'
    AllowedPattern: '[A-Za-z0-9]+'
    ConstraintDescription: must only contain uppercase and lowercase letters and numbers
    Description: >-
      An alternative name prefix. This shorter version of prefix is used on a
      resource that Resource tag prefix cannot apply to. Must be at most 10
      characters long and only contain uppercase, lowercase letters, and
      numbers. Max length is 10.
  UniqueID:
    Type: String
    MaxLength: '8'
    AllowedPattern: '[A-Za-z0-9]+'
    ConstraintDescription: must only contain uppercase and lowercase letters and digits
    Description: >-
      A random text suffix for the DynamoDB table name which can help ensure the
      DB table name is unique per region. Can only contain uppercase, lowercase
      letters, and digits. Max length is 8.
  DbTableArn:
    Type: String
    Description: >-
      The ARN of the DynamoDB table which is used to keep tracks of nic
      attachment records.
Conditions:
  UsingDefaultBucket: !Equals [!Ref QSS3BucketName, 'aws-quickstart']
Resources:
  StackCopyLambdaSource:
    Type: 'AWS::CloudFormation::Stack'
    Properties:
      Parameters:
        QSS3BucketName: !Ref QSS3BucketName
        QSS3KeyPrefix: !Ref QSS3KeyPrefix
        ObjectPaths: functions/packages/nic-attachment.zip
      TemplateURL: !Sub
        - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/copy-objects.template.yaml'
        - S3Region: !If [ UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion ]
          S3Bucket: !If [ UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName ]
      TimeoutInMinutes: 5
  NicAttachmentCfnServiceProvider:
    Properties:
      ServiceToken: !GetAtt
        - NicAttachmentCfnServiceProviderScript
        - Arn
      CustomIdentifier: !Ref ResourceTagPrefix
      UniqueId: ''
    Type: 'AWS::CloudFormation::CustomResource'
  NicAttachmentCfnServiceProviderScript:
    Type: 'AWS::Lambda::Function'
    Properties:
      Description: >-
        EC2 network interface attachment service - CloudFormation service
        provider script to create / delete the service
      FunctionName: !Join
        - '-'
        - - !Ref CustomIdentifier
          - !Ref UniqueID
          - fortigate-nic-attachment-service-provider
      Runtime: nodejs12.x
      Role: !GetAtt
        - IamRoleNicAttachment
        - Arn
      Handler: cfn-service.handler
      Timeout: 300
      Code:
        S3Bucket: !GetAtt StackCopyLambdaSource.Outputs.DestinationBucket
        S3Key: !Sub
          - '${KeyPrefix}functions/packages/nic-attachment.zip'
          - KeyPrefix: !Ref QSS3KeyPrefix
      Environment:
        Variables:
          UNIQUE_ID: ''
          STACK_ID: !Ref 'AWS::StackId'
      Tags:
        - Key: ResourceGroup
          Value: !Ref ResourceTagPrefix
  NicAttachmentServiceScript:
    Type: 'AWS::Lambda::Function'
    Properties:
      Description: Handle network interface attachment / detachment to an EC2 instance.
      FunctionName: !Join
        - '-'
        - - !Ref CustomIdentifier
          - !Ref UniqueID
          - fortigate-nic-attachment-service
      Runtime: nodejs12.x
      Role: !GetAtt
        - IamRoleNicAttachment
        - Arn
      Handler: index.handler
      Timeout: 300
      Code:
        S3Bucket: !GetAtt StackCopyLambdaSource.Outputs.DestinationBucket
        S3Key: !Sub
          - '${KeyPrefix}functions/packages/nic-attachment.zip'
          - KeyPrefix: !Ref QSS3KeyPrefix
      Environment:
        Variables:
          UNIQUE_ID: ''
          STACK_ID: !Ref 'AWS::StackId'
      Tags:
        - Key: ResourceGroup
          Value: !Ref ResourceTagPrefix
  IamRoleNicAttachment:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: 2012-10-17
      ManagedPolicyArns:
        - !Sub arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Path: /
      Policies:
        - PolicyName: nic-attachment-service-lambda-policy
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - 'ec2:CreateNetworkInterface'
                  - 'ec2:ModifyNetworkInterfaceAttribute'
                  - 'ec2:DescribeInstances'
                  - 'ec2:DetachNetworkInterface'
                  - 'ec2:DescribeNetworkInterfaces'
                  - 'ec2:DeleteNetworkInterface'
                  - 'ec2:AttachNetworkInterface'
                Resource:
                  - !Sub arn:${AWS::Partition}:lambda:::::*
                  - !Sub arn:${AWS::Partition}:ec2:::::*
              - Effect: Allow
                Action:
                  - 'dynamodb:DescribeTable'
                  - 'dynamodb:CreateTable'
                  - 'dynamodb:DeleteItem'
                  - 'dynamodb:GetItem'
                  - 'dynamodb:Scan'
                  - 'dynamodb:DeleteTable'
                Resource: !Ref DbTableArn
            Version: 2012-10-17
    Type: 'AWS::IAM::Role'
Outputs:
  CfnServiceProvider:
    Description: Service provider script - EC2 network interface attachment service.
    Value: !GetAtt
      - NicAttachmentCfnServiceProviderScript
      - Arn
  ServiceScript:
    Description: Service script - EC2 network interface attachment service.
    Value: !GetAtt
      - NicAttachmentServiceScript
      - Arn
